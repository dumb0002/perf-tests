
{{$namespaces := DefaultParam .namespaces 1}}
{{$actionName := DefaultParam .actionName "Creating"}}
{{$waitTime := DefaultParam .waitTime "5m"}}

{{$BIG_GROUP_SIZE := DefaultParam .BIG_GROUP_SIZE 0}}
{{$MEDIUM_GROUP_SIZE := DefaultParam .MEDIUM_GROUP_SIZE 0}}
{{$SMALL_GROUP_SIZE := DefaultParam .SMALL_GROUP_SIZE 20}}

{{$bigAppwrappersPerNamespace := $BIG_GROUP_SIZE}}
{{$mediumAppwrappersPerNamespace := $MEDIUM_GROUP_SIZE}}
{{$smallAppwrappersPerNamespace := $SMALL_GROUP_SIZE}}


name: load
namespace:
  number: {{$namespaces}}
tuningSets:

# Global100qps: use 100 qps globally:
# * split equally qps among all running phases
# * if some phase finishes, other phases will get more qps.
- name: Global100qps
  globalQPSLoad:
    qps: 100
    burst: 1

# RandomizedLoad defines a load that is spread randomly
# across a given total time.
- name: RandomizedLoad
  randomizedLoad:
    AverageQPS: 10

# SteppedLoad defines a load that generates a burst of
# a given size every X seconds.
- name: RSteppedLoad
  steppedLoad:
    burstSize: 200
    stepDelay: 1s

# ParallelismLimitedLoad does the operations as quickly as possible subject to a given
# limit on the number running concurrently.
- name: Sequence
  parallelismLimitedLoad:
    parallelismLimit: 1

steps:

- module:
    path: modules/appwrappers.yaml
    params:
      actionName: {{$actionName}}
      tuningSet: RandomizedLoad
      namespaces: {{$namespaces}}
      smallAppwrappersPerNamespace: {{$smallAppwrappersPerNamespace}}
      mediumAppwrappersPerNamespace: {{$mediumAppwrappersPerNamespace}}
      bigAppwrappersPerNamespace: {{$bigAppwrappersPerNamespace}}


- name: "Wait {{$waitTime}}"
  measurements:
    - Identifier: Wait
      Method: Sleep
      Params:
        duration: {{$waitTime}}